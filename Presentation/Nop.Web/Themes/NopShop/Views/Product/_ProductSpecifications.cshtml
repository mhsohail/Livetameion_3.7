@model IList<ProductSpecificationModel>
@using Nop.Web.Models.Catalog;
@using Nop.Core.Domain.Catalog;
@using Nop.Core.Infrastructure;

@if (Model.Count > 0)
{
    <div class="product-specs-box">
        @{
            var specificationAttributeService = EngineContext.Current.Resolve<Nop.Services.Catalog.ISpecificationAttributeService>();
            var specAttributeId = Model[0].SpecificationAttributeId;
            var productSpecAttributes = specificationAttributeService.GetProductSpecificationAttributes().Where(psa => psa.SpecificationAttributeOption.SpecificationAttributeId == specAttributeId).ToList();
            if (productSpecAttributes[0].Product.ProductType == ProductType.Car)
            {
                var vehicleProductSpecAttributes = specificationAttributeService.GetProductSpecificationAttributes(productSpecAttributes[0].Product.Id)
                        .Where(a => a.SpecificationAttributeOption.SpecificationAttribute.Name.StartsWith("Vehicle"));
                var groups = vehicleProductSpecAttributes.Select(a => a.SpecificationAttributeOption.SpecificationAttribute.Name).GroupBy(a => a.Split('|')[1]);

                foreach (var group in groups)
                {
                    <table class="data-table table table-striped">
                        <colgroup>
                            <col width="25%" />
                            <col />
                        </colgroup>
                        @{ var groupName = group.Key; }
                        <h4>@groupName</h4>
                        <tbody>
                            @{var productSpecAttributesGroups = vehicleProductSpecAttributes.Where(a => a.SpecificationAttributeOption.SpecificationAttribute.Name.Contains(groupName));
                                foreach (var productSpecAttributesGroup in productSpecAttributesGroups)
                                {
                                    var attributeName = productSpecAttributesGroup.SpecificationAttributeOption.SpecificationAttribute.Name.Split('|')[2];

                                    <tr @(Array.IndexOf(productSpecAttributesGroups.ToArray(), productSpecAttributesGroup) % 2 == 0 ? Html.Raw(" class=\"odd\"") : Html.Raw(" class=\"even\""))>
                                        <td class="a-left spec-name">
                                            @attributeName
                                        </td>
                                        <td class="a-left spec-value">
                                            @Html.Raw(productSpecAttributesGroup.CustomValue)
                                        </td>
                                    </tr>
                                }
                            }
                        </tbody>
                    </table>
                                    }
                                }
                                else
                                {
                                    <div class="title">
                                        <strong>@T("Products.Specs")</strong>
                                    </div>
                                    <div class="table-wrapper">
                                        <table class="data-table">
                                            <colgroup>
                                                <col width="25%" />
                                                <col />
                                            </colgroup>
                                            <tbody>
                                                @for (int i = 0; i < Model.Count; i++)
                                                {
                                                    var item = Model[i];
                                                    <tr @(i % 2 == 0 ? Html.Raw(" class=\"odd\"") : Html.Raw(" class=\"even\""))>
                                                        <td class="spec-name">
                                                            @item.SpecificationAttributeName
                                                        </td>
                                                        <td class="spec-value">
                                                            @Html.Raw(item.ValueRaw)
                                                        </td>
                                                    </tr>
                                                }
                                            </tbody>
                                        </table>
                                    </div>
                                }
                                }
    </div>
}