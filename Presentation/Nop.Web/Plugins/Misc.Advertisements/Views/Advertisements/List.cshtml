@using Nop.Core.Infrastructure;
@using System;
@using Nop.Web.Framework;
@using Nop.Web.Framework.UI;
@using Nop.Web.Framework.Events;
@using Nop.Core.Infrastructure;
@using Nop.Services.Events;
@using Nop.Admin.Models.Catalog;
@using Nop.Admin.Models.Orders;
@model Nop.Plugin.Misc.Advertisements.ViewModels.AdvertisementListModel

@{
    var defaultGridPageSize = Nop.Core.Infrastructure.EngineContext.Current.Resolve<Nop.Core.Domain.Common.AdminAreaSettings>().DefaultGridPageSize;
    var gridPageSizes = Nop.Core.Infrastructure.EngineContext.Current.Resolve<Nop.Core.Domain.Common.AdminAreaSettings>().GridPageSizes;
    Layout = "_AdminLayout";
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    <div class="section-header">
        <div class="title">
            <img src="@Url.Content("~/Administration/Content/images/ico-catalog.png")" alt="" />
            Manage Advertisements
        </div>
        <div class="options">
            <a href="@Url.Action("Create")" class="k-button">@T("Admin.Common.AddNew")</a>
            <input type="button" id="delete-selected" class="k-button" value="@T("Admin.Common.Delete.Selected")" />
        </div>
    </div>
     <table class="adminContent">
         <tr>
             <td>
                 <div id="advertisements-grid"></div>
                 <script>
                     $(document).ready(function() {
                         $("#advertisements-grid").kendoGrid({
                             dataSource: {
                                 type: "json",
                                 transport: {
                                     read: {
                                         url: "@Html.Raw(Url.Action("AdvertisementList", "Ads", new { area = "Admin" }))",
                                         type: "POST",
                                         dataType: "json",
                                         data: additionalData
                                     }
                                 },
                                 schema: {
                                     data: "Data",
                                     total: "Total",
                                     errors: "Errors"
                                 },
                                 error: function(e) {
                                     display_kendoui_grid_error(e);
                                     // Cancel the changes
                                     this.cancelChanges();
                                 },
                                 pageSize: @(defaultGridPageSize),
                                 serverPaging: true,
                                 serverFiltering: true,
                                 serverSorting: true
                             },
                             pageable: {
                                 refresh: true,
                                 pageSizes: [@(gridPageSizes)]
                             },
                             editable: {
                                 confirmation: false,
                                 mode: "inline"
                             },
                             scrollable: false,
                             dataBound: onDataBound,
                             columns: [
                                 {
                                     field: "Id",
                                     headerTemplate: "<input id='mastercheckbox' type='checkbox'/>",
                                     headerAttributes: { style: "text-align:center" },
                                     attributes: { style: "text-align:center" },
                                     template: "<input type='checkbox' value='#=Id#' class='checkboxGroups'/>",
                                     width: 50
                                 }, {
                                     field: "Name",
                                     title: "Name",
                                     width: 50
                                 }, {
                                     field: "Url",
                                     title: "Url",
                                     width: 50
                                 }, {
                                     field: "Banner",
                                     title: "Banner Thumbnail",
                                     template: '<img src="#=BannerThumbnailUrl#" />',
                                     width: 100
                                 }, {
                                     field: "Published",
                                     title: "@T("Admin.Catalog.Products.Fields.Published")",
                                     width: 100,
                                     headerAttributes: { style: "text-align:center" },
                                     attributes: { style: "text-align:center" },
                                     template: '<img src="@Url.Content("~/Administration/Content/images/")active-#=Published#.gif" />'
                                 }, {
                                     field: "Id",
                                     title: "@T("Admin.Common.Edit")",
                                     width: 100,
                                     template: '<a href="Edit/#=Id#">@T("Admin.Common.Edit")</a>'
                                 }
                             ]
                         });
                     });
                 </script>
             </td>
         </tr>
     </table>

    <script type="text/javascript">

        var selectedIds = [];

        $(document).ready(function () {

            //delete selected
            $('#delete-selected').click(function(e) {

                e.preventDefault();

                var postData = {
                    selectedIds: selectedIds
                };
                addAntiForgeryToken(postData);

                $.ajax({
                    cache: false,
                    type: "POST",
                    url: "@(Url.Action("DeleteSelected", "Ads", new { area = "Admin" }))",
                    data: postData,
                    complete: function(data) {
                        //reload grid
                        var grid = $('#advertisements-grid').data('kendoGrid');
                        grid.dataSource.read();
                    },
                    error: function(xhr, ajaxOptions, thrownError) {
                        alert(thrownError);
                    },
                    traditional: true
                });
                return false;
            });

            $('#mastercheckbox').click(function () {
                $('.checkboxGroups').attr('checked', $(this).is(':checked')).change();
            });

            //wire up checkboxes.
            $('#advertisements-grid').on('change', 'input[type=checkbox][id!=mastercheckbox]', function (e) {
                var $check = $(this);
                if ($check.is(":checked") == true) {
                    var checked = jQuery.inArray($check.val(), selectedIds);
                    if (checked == -1) {
                        //add id to selectedIds.
                        selectedIds.push($check.val());
                    }
                }
                else {
                    var checked = jQuery.inArray($check.val(), selectedIds);
                    if (checked > -1) {
                        //remove id from selectedIds.
                        selectedIds = $.grep(selectedIds, function (item, index) {
                            return item != $check.val();
                        });
                    }
                }
                updateMasterCheckbox();
            });
        });

        function additionalData() {
            var data = {
                SearchProductName: $('#@Html.FieldIdFor(model => model.SearchAdvertisementName)').val(),
                SearchStoreId: $('#SearchStoreId').val(),
                SearchVendorId: $('#SearchVendorId').val(),
            };
            addAntiForgeryToken(data);
            return data;
        }

        function onDataBound(e) {
            $('#advertisements-grid input[type=checkbox][id!=mastercheckbox]').each(function () {
                var currentId = $(this).val();
                var checked = jQuery.inArray(currentId, selectedIds);
                //set checked based on if current checkbox's value is in selectedIds.
                $(this).attr('checked', checked > -1);
            });

            updateMasterCheckbox();
        }

        function updateMasterCheckbox() {
            var numChkBoxes = $('#advertisements-grid input[type=checkbox][id!=mastercheckbox]').length;
            var numChkBoxesChecked = $('#advertisements-grid input[type=checkbox][id!=mastercheckbox]:checked').length;
            $('#mastercheckbox').attr('checked', numChkBoxes == numChkBoxesChecked && numChkBoxes > 0);
        }
    </script>
}